package main

import (
	"Yui/plugin/meta"
	"bytes"
	"crypto/sha256"
	"encoding/binary"
	"encoding/gob"
	"encoding/hex"
	"io"
	"os"
)

func main() {
	b, _ := os.ReadFile("plugins/example.wasm")
	s := sha256.New()
	s.Write(b)

	m := meta.PluginMeta{
		PluginName:  "测试插件",
		Author:      "enjoy",
		Url:         "mcenjoy.cn",
		Version:     0,
		Permissions: meta.SendMsgPermission | meta.HTTPRequestPermission | meta.ReceiveAllMsgPermission | meta.UploadPermission,
		Sha256:      hex.EncodeToString(s.Sum(nil)),
	}
	var headerBuf bytes.Buffer
	e := gob.NewEncoder(&headerBuf)
	if err := e.Encode(m); err != nil {
		panic(err)
	}
	var buf bytes.Buffer
	buf.Write([]byte("OPQ"))
	if err := binary.Write(&buf, binary.LittleEndian, int32(headerBuf.Len())); err != nil {
		panic(err)
	}
	buf.Write(headerBuf.Bytes())
	buf.Write(b)
	f, err := os.OpenFile("plugins/example.opq", os.O_CREATE|os.O_WRONLY|os.O_TRUNC, 0777)
	if err != nil {
		panic(err)
	}
	defer f.Close()

	_, err = io.Copy(f, &buf)
	if err != nil {
		panic(err)
	}
}
